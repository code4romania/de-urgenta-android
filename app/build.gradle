apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'org.sonarqube'
apply plugin: 'androidx.navigation.safeargs.kotlin'

// TODO: Uncomment this to enable Firebase Crashlytics
// apply plugin: 'com.google.firebase.crashlytics'

static def getKey(String env, String key) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File(env.concat('.properties'))))
    return props[key] ?: ""
}

static def asString(String field) {
    return "\"${field}\""
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "ro.code4.deurgenta"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    signingConfigs {
        fastlane {
            storeFile file(getKey("keystore", "storeFile"))
            keyAlias getKey("keystore", "keyAlias")
            keyPassword getKey("keystore", "keyPassword")
            storePassword getKey("keystore", "storePassword")
        }
    }

    buildTypes {
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_URL", asString(getKey(variant.buildType.name, "apiUrl"))
            variant.buildConfigField "String", "TERMS_AND_CONDITIONS",
                    asString(getKey(variant.buildType.name, "termsAndConditions"))
            variant.buildConfigField "double", "SEARCH_RADIUS", getKey(variant.buildType.name, "addressSearchRadius")
            variant.buildConfigField "String", "CODE4RO_URL", asString(getKey(variant.buildType.name, "code4roUrl"))
            variant.buildConfigField "String", "CODE4RO_FACEBOOK_URL",
                    asString(getKey(variant.buildType.name, "code4roFacebookUrl"))
            variant.buildConfigField "String", "CODE4RO_INSTAGRAM_URL",
                    asString(getKey(variant.buildType.name, "code4roInstagramUrl"))
            variant.buildConfigField "String", "CODE4RO_GITHUB_URL",
                    asString(getKey(variant.buildType.name, "code4roGithubUrl"))
            variant.buildConfigField "String", "CODE4RO_DONATE_URL",
                    asString(getKey(variant.buildType.name, "code4roDonateUrl"))
            variant.buildConfigField "String", "SUPPORT_EMAIL", asString(getKey(variant.buildType.name, "supportEmail"))

            def productFlavor = variant.productFlavors[0] != null ? "${variant.productFlavors[0].name.capitalize()}" : ""
            def buildType = "${variant.buildType.name.capitalize()}"
            tasks["compile${productFlavor}${buildType}UnitTestSources"].dependsOn(tasks["merge${productFlavor}${buildType}Assets"])
        }

        debug {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting: "false"]
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.fastlane
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [enableCrashReporting: "true"]
        }
    }

    lintOptions {
        baseline file("lint-baseline.xml")
        warningsAsErrors true
        abortOnError true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        def sharedFolder = "src/sharedTest/java"
        test {
            java {
                srcDirs += sharedFolder
            }
        }
        androidTest {
            java {
                srcDirs += sharedFolder
            }
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: ['*mock*.jar'])

    // Needed for locating the user -  todo - do it with here positioning
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "com.google.android.material:material:1.5.0-alpha03"
    implementation "androidx.constraintlayout:constraintlayout:2.1.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion"
    implementation 'me.relex:circleindicator:2.1.6'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    debugImplementation "androidx.fragment:fragment-testing:1.4.0-alpha09"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "com.github.Zhuinden:fragmentviewbindingdelegate-kt:$viewBindingDelegateVersion"
    implementation platform("com.squareup.okhttp3:okhttp-bom:4.9.0")
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation platform("com.google.firebase:firebase-bom:$firebaseVersion")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-rxjava3:$roomVersion"

    //Social media login
    //facebook sdk
    //implementation 'com.facebook.android:facebook-login:5.15.3'
    //implementation 'com.facebook.android:facebook-android-sdk:5.15.3'
    //implementation 'com.facebook.android:facebook-marketing:4.42.0'
    //implementation 'com.google.android.gms:play-services-auth:19.0.0'
    //implementation 'com.willowtreeapps:signinwithapplebutton:0.3'

    // Unit tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Instrumented tests
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    // needs the dex opener for version lower than P
    androidTestImplementation "io.insert-koin:koin-test:$koinVersion"
    androidTestImplementation "io.mockk:mockk-android:1.11.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
}

// TODO: Uncomment this to enable FirebaseAnalytics and Crashlytics
//apply plugin: 'com.google.gms.google-services'
